version: '3.4'

networks:
  test_deployment_network:
    driver: bridge 

services:
  reverseproxy:
    container_name: "reverseproxy"
    build:
      context: ./reverseproxy
      dockerfile: Nginx.Dockerfile
    ports:
      - "80:80"
      - "443:443"
    restart: always
    networks: 
      - "test_deployment_network"

  test_deployment:
    image: ${DOCKER_REGISTRY-}testdeploymentwebsite
    depends_on:
      - "reverseproxy"
      - "postgres_image"
    build:
      context: .
      dockerfile: TestDeployment.Website/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    expose:
      - "5000"
    restart: always
    networks: 
      - "test_deployment_network"
  
  postgres_image:
    image: postgres:12.6
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - db_volume:/var/lib/postgresql/data
      - ./dbscripts/seed.sql :/docker-entrypoint-initdb.d/seed.sql
    environment:
      POSTGRES_DB: "testdeployment"
      POSTGRES_USER: "testdeploymentuser"
      POSTGRES_PASSWORD: "abracadabra1!"
    networks: 
      - "test_deployment_network"
volumes:
  db_volume: